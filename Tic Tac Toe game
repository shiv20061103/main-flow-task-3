import math

# Initialize board
board = [" " for _ in range(9)]

# Display board
def print_board():
    for i in range(3):
        print("|".join(board[i*3:(i+1)*3]))
        if i < 2:
            print("-" * 5)

# Check for winner
def check_winner(b, player):
    win_conditions = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # cols
        [0, 4, 8], [2, 4, 6]              # diagonals
    ]
    return any(all(b[pos] == player for pos in cond) for cond in win_conditions)

# Check for draw
def is_draw():
    return " " not in board

# Minimax algorithm
def minimax(b, depth, is_maximizing):
    if check_winner(b, "O"):
        return 1
    elif check_winner(b, "X"):
        return -1
    elif is_draw():
        return 0

    if is_maximizing:
        best_score = -math.inf
        for i in range(9):
            if b[i] == " ":
                b[i] = "O"
                score = minimax(b, depth + 1, False)
                b[i] = " "
                best_score = max(score, best_score)
        return best_score
    else:
        best_score = math.inf
        for i in range(9):
            if b[i] == " ":
                b[i] = "X"
                score = minimax(b, depth + 1, True)
                b[i] = " "
                best_score = min(score, best_score)
        return best_score

# Get best move for AI
def get_best_move():
    best_score = -math.inf
    move = -1
    for i in range(9):
        if board[i] == " ":
            board[i] = "O"
            score = minimax(board, 0, False)
            board[i] = " "
            if score > best_score:
                best_score = score
                move = i
    return move

# Main game loop
def play_game():
    print("Welcome to AI Tic-Tac-Toe (You: X, AI: O)")
    print_board()

    while True:
        # User move
        try:
            move = int(input("Enter your move (1-9): ")) - 1
        except ValueError:
            print("Invalid input. Enter a number from 1 to 9.")
            continue

        if move < 0 or move > 8 or board[move] != " ":
            print("Invalid move. Try again.")
            continue
        board[move] = "X"
        print_board()

        if check_winner(board, "X"):
            print("ðŸŽ‰ You win!")
            break
        if is_draw():
            print("It's a draw!")
            break

        # AI move
        print("AI is thinking...")
        ai_move = get_best_move()
        board[ai_move] = "O"
        print_board()

        if check_winner(board, "O"):
            print("ðŸ’» AI wins!")
            break
        if is_draw():
            print("It's a draw!")
            break
play_game()
